! homematic device name/address
string name = "Led16Display";

! get the device
object device = dom.GetObject(name);
! WriteLine(device);

! check if the device exists
if (!device) {
    WriteLine("Device '" # name # "' NOT found");
    return;
} else {
    WriteLine("Device '" # name # "' found");
};

! check if the device is a 16led display
if (device.HssType() != "HM-OU-LED16") {
    WriteLine("Device '" # name # "' is NOT a 16led display");
    return;
} else {
    WriteLine("Device '" # name # "' is a 16led display");
};

integer n=1; ! for the channel
integer t=1; ! for sleep t seconds

string channelDataPoint = "BidCos-RF." # device.Address() # ":" # n # ".LED_STATUS";
object datapoint = dom.GetObject(channelDataPoint);
! check if the datapoint exists
if (!datapoint) {
    WriteLine("Datapoint '" # channelDataPoint # "' NOT found");
    return;
} else {
    WriteLine("Datapoint '" # channelDataPoint # "' found");
};
WriteLine("Datapoint: " # datapoint);
! get the value 
integer value = datapoint.Value();
WriteLine("Value: " # value);


! set to red
datapoint.State(1);
system.Exec("/bin/sleep " # t,&stdout,&stderr); ! sleep t seconds

! set to green
datapoint.State(2);
system.Exec("/bin/sleep " # t,&stdout,&stderr); ! sleep t seconds

! set to yellow
datapoint.State(3);
system.Exec("/bin/sleep " # t,&stdout,&stderr); ! sleep t seconds

! set to off
datapoint.State(0);
